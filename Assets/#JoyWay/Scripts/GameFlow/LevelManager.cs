using UnityEngine.SceneManagement;
using System;
using UnityEngine;
using UnityEditor;

public class LevelManager : Singleton<LevelManager> {
	public static ScenesList currentScene = ScenesList.Booter;
	public static Scene savedMainScene;

	public static Action SoonLoading, StartLoading, EndLoading;

	private void Start() {
//		if (!GameMain.settings.serializable.tutors.mainPartCompleted)
//			LoadTutorial();
//		else
//			LoadMenu();
//		//LoadDungeon();
	}

	private static ScenesList sceneForLoad;
	public static void Load(ScenesList _scene) {
		
		sceneForLoad = _scene;
		SoonLoading?.Invoke();
		instance.Invoke(nameof(LoadScene), .5f);

	}

	void LoadScene() {

		StartLoading?.Invoke();
		SceneManager.sceneLoaded += CompletionLoad;
		
		currentScene = sceneForLoad;
		Player.instance.TotalReset();
		Player.instance.TotalReset();
		SceneManager.LoadScene((int)currentScene, LoadSceneMode.Single);
		
		CheckGameState(currentScene);
	}
	void CompletionLoad(Scene scene, LoadSceneMode mode) {
		SceneManager.sceneLoaded -= CompletionLoad;
		EndLoading?.Invoke();
	}



	public static void TemporalySetMainScene(Scene _tempScene) {
		savedMainScene = SceneManager.GetActiveScene();
		SceneManager.SetActiveScene(_tempScene);
	}

	public static void ResetMainScene() {
		SceneManager.SetActiveScene(savedMainScene);
	}

	public static void LoadTutorial() {
		Load(ScenesList.Tutorial);
	}

	public static void LoadDungeon() {
		Load(ScenesList.AutoGenerated);
	}

	public static void LoadHub() {
		Load(ScenesList.Hub);
	}

	public static void LoadIntro() {
		Load(ScenesList.Intro);
	}

	// public static void LoadMenu() {
	// 	Load(ScenesList.MainMenu);
	// }

	public static void LoadDeathScene() {
		Load(ScenesList.Hub);
	}

	private void CheckGameState(ScenesList scene) {
		switch (scene) {
			case ScenesList.AutoGenerated:
				EasyGameManager.instance.onGameStateChange?.Invoke(EasyGameManager.GameStates.Dungeon);
				break;
			case ScenesList.Hub:
				EasyGameManager.instance.onGameStateChange?.Invoke(EasyGameManager.GameStates.Hub);
				break;
			case ScenesList.Tutorial:
				EasyGameManager.instance.onGameStateChange?.Invoke(EasyGameManager.GameStates.Tutorial);
				break;
			case ScenesList.Intro:
				EasyGameManager.instance.onGameStateChange?.Invoke(EasyGameManager.GameStates.Intro);
				break;
			case ScenesList.FakeDungeon:
				EasyGameManager.instance.onGameStateChange?.Invoke(EasyGameManager.GameStates.FakeDungeon);
				break;
			case ScenesList.FakeHub:
				EasyGameManager.instance.onGameStateChange?.Invoke(EasyGameManager.GameStates.FakeHub1);
				break;
			case ScenesList.FakeHub2:
				EasyGameManager.instance.onGameStateChange?.Invoke(EasyGameManager.GameStates.FakeHub2);
				break;
		}
	}

	public static void Exit() {
#if UNITY_EDITOR
		EditorApplication.isPlaying = false;
#else
		Application.Quit();
#endif
	}
}


public enum ScenesList {
	Booter,
	LocalTutor,
	AutoGenerated,
	Hub,
	Tutorial,
	Intro,
	FakeDungeon,
	FakeHub,
	FakeHub2,
}