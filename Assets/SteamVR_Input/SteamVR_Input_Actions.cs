//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_Teleport;
        
        private static SteamVR_Action_Single p_default_TriggerSqueeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnRight;
        
        private static SteamVR_Action_Vector2 p_default_MovePad;
        
        private static SteamVR_Action_Boolean p_default_Shoot;
        
        private static SteamVR_Action_Boolean p_default_Grab;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Boolean p_default_Pause;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_GripSquezee;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Boolean p_gemAbilities_Primary;
        
        private static SteamVR_Action_Boolean p_gemAbilities_Secondary;
        
        private static SteamVR_Action_Single p_locomotion_Rotate;
        
        private static SteamVR_Action_Boolean p_locomotion_SnapTurnR;
        
        private static SteamVR_Action_Boolean p_locomotion_SnapTurnL;
        
        private static SteamVR_Action_Boolean p_locomotion_Dash;
        
        private static SteamVR_Action_Vector2 p_locomotion_Move;
        
        public static SteamVR_Action_Boolean default_Teleport
        {
            get
            {
                return SteamVR_Actions.p_default_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single default_TriggerSqueeze
        {
            get
            {
                return SteamVR_Actions.p_default_TriggerSqueeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_MovePad
        {
            get
            {
                return SteamVR_Actions.p_default_MovePad.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Shoot
        {
            get
            {
                return SteamVR_Actions.p_default_Shoot.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Grab
        {
            get
            {
                return SteamVR_Actions.p_default_Grab.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Pause
        {
            get
            {
                return SteamVR_Actions.p_default_Pause.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_GripSquezee
        {
            get
            {
                return SteamVR_Actions.p_default_GripSquezee.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Boolean gemAbilities_Primary
        {
            get
            {
                return SteamVR_Actions.p_gemAbilities_Primary.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean gemAbilities_Secondary
        {
            get
            {
                return SteamVR_Actions.p_gemAbilities_Secondary.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single locomotion_Rotate
        {
            get
            {
                return SteamVR_Actions.p_locomotion_Rotate.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean locomotion_SnapTurnR
        {
            get
            {
                return SteamVR_Actions.p_locomotion_SnapTurnR.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean locomotion_SnapTurnL
        {
            get
            {
                return SteamVR_Actions.p_locomotion_SnapTurnL.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean locomotion_Dash
        {
            get
            {
                return SteamVR_Actions.p_locomotion_Dash.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 locomotion_Move
        {
            get
            {
                return SteamVR_Actions.p_locomotion_Move.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_TriggerSqueeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_MovePad,
                    SteamVR_Actions.default_Shoot,
                    SteamVR_Actions.default_Grab,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_Pause,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_GripSquezee,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.gemAbilities_Primary,
                    SteamVR_Actions.gemAbilities_Secondary,
                    SteamVR_Actions.locomotion_Rotate,
                    SteamVR_Actions.locomotion_SnapTurnR,
                    SteamVR_Actions.locomotion_SnapTurnL,
                    SteamVR_Actions.locomotion_Dash,
                    SteamVR_Actions.locomotion_Move};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_TriggerSqueeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_MovePad,
                    SteamVR_Actions.default_Shoot,
                    SteamVR_Actions.default_Grab,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_Pause,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_GripSquezee,
                    SteamVR_Actions.gemAbilities_Primary,
                    SteamVR_Actions.gemAbilities_Secondary,
                    SteamVR_Actions.locomotion_Rotate,
                    SteamVR_Actions.locomotion_SnapTurnR,
                    SteamVR_Actions.locomotion_SnapTurnL,
                    SteamVR_Actions.locomotion_Dash,
                    SteamVR_Actions.locomotion_Move};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_Shoot,
                    SteamVR_Actions.default_Grab,
                    SteamVR_Actions.default_Pause,
                    SteamVR_Actions.gemAbilities_Primary,
                    SteamVR_Actions.gemAbilities_Secondary,
                    SteamVR_Actions.locomotion_SnapTurnR,
                    SteamVR_Actions.locomotion_SnapTurnL,
                    SteamVR_Actions.locomotion_Dash};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_TriggerSqueeze,
                    SteamVR_Actions.default_GripSquezee,
                    SteamVR_Actions.locomotion_Rotate};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_MovePad,
                    SteamVR_Actions.locomotion_Move};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_TriggerSqueeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_MovePad,
                    SteamVR_Actions.default_Shoot,
                    SteamVR_Actions.default_Grab,
                    SteamVR_Actions.default_Pause,
                    SteamVR_Actions.default_GripSquezee,
                    SteamVR_Actions.gemAbilities_Primary,
                    SteamVR_Actions.gemAbilities_Secondary,
                    SteamVR_Actions.locomotion_Rotate,
                    SteamVR_Actions.locomotion_SnapTurnR,
                    SteamVR_Actions.locomotion_SnapTurnL,
                    SteamVR_Actions.locomotion_Dash,
                    SteamVR_Actions.locomotion_Move};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Teleport")));
            SteamVR_Actions.p_default_TriggerSqueeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/TriggerSqueeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnLeft")));
            SteamVR_Actions.p_default_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnRight")));
            SteamVR_Actions.p_default_MovePad = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/MovePad")));
            SteamVR_Actions.p_default_Shoot = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Shoot")));
            SteamVR_Actions.p_default_Grab = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Grab")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_Pause = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Pause")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_GripSquezee = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/GripSquezee")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_gemAbilities_Primary = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/gemAbilities/in/Primary")));
            SteamVR_Actions.p_gemAbilities_Secondary = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/gemAbilities/in/Secondary")));
            SteamVR_Actions.p_locomotion_Rotate = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/locomotion/in/Rotate")));
            SteamVR_Actions.p_locomotion_SnapTurnR = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/locomotion/in/SnapTurnR")));
            SteamVR_Actions.p_locomotion_SnapTurnL = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/locomotion/in/SnapTurnL")));
            SteamVR_Actions.p_locomotion_Dash = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/locomotion/in/Dash")));
            SteamVR_Actions.p_locomotion_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/locomotion/in/Move")));
        }
    }
}
